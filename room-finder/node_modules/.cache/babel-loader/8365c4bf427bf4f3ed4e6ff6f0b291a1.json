{"ast":null,"code":"import axios from 'axios';\nexport const GET_LODGE_RE = 'GET_LODGE_RE';\nexport const GET_LODGE_SUCC = 'GET_LODGE_SUCC';\nexport const GET_LODGE_FAIL = 'GET_LODGE_FAIL';\nexport const UPDATE_LOADGE_I = 'UPDATE_LOADGE_RE';\nexport const UPDATE_LOADGE_SUCC = 'UPDATE_LOADGE_SUCC';\nexport const UPDATE_LOADGE_FAIL = 'UPDATE_LOADGE_FAIL'; // export const DELETE_LOADGE_RE = 'DELETE_LOADGE_RE';\n// export const DELETE_LOADGE_SUCC = 'DELETE_LOADGE_SUCC';\n// export const DELETE_LOADGE_FAIL = 'DELETE_LOADGE_FAIL';\n\nexport const getInfo = () => dispatch => {\n  dispatch({\n    type: GET_LODGE_RE\n  });\n  return axios.get(\"http://localhost:5000/api/users/u\") //console.log(data,'one')\n  .then(response => dispatch({\n    type: GET_LODGE_SUCC,\n    name: response.data\n  })).catch(err => dispatch({\n    type: GET_LODGE_FAIL,\n    message: err\n  }));\n};\nexport const updateInfo = id => dispatch => {\n  dispatch({\n    type: GET_LODGE_RE\n  });\n  axios.put(\"http://localhost:5000/api/users/{id}\") //console.log(data,'one')\n  .then(response => dispatch({\n    type: GET_LODGE_SUCC,\n    name: response.data\n  })).catch(err => dispatch({\n    type: GET_LODGE_FAIL,\n    message: err\n  }));\n};\nexport const deleteInfo = id => dispatch => {\n  dispatch({\n    type: GET_LODGE_RE\n  });\n  axios.delete(\"http://localhost:5000/api/users/{id}\") //console.log(data,'one')\n  .then(response => dispatch({\n    type: GET_LODGE_SUCC,\n    name: response.data\n  })).catch(err => dispatch({\n    type: GET_LODGE_FAIL,\n    message: err\n  }));\n}; // export const getNames = (item) => {\n//   return {\n//     type: GET_LODGE_SUCC,\n//     item\n//   }\n// };\n// export const getInfo = (url,props) => {\n//   return (dispatch) => {\n//     return axios.get(\"http://localhost:5000/api/users/u\")\n//       .then(response => {\n//         dispatch(getNames(response.data))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n// export default getInfo;","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/room-finder/src/Actions/lodgeA.js"],"names":["axios","GET_LODGE_RE","GET_LODGE_SUCC","GET_LODGE_FAIL","UPDATE_LOADGE_I","UPDATE_LOADGE_SUCC","UPDATE_LOADGE_FAIL","getInfo","dispatch","type","get","then","response","name","data","catch","err","message","updateInfo","id","put","deleteInfo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,kBAAxB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEP;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAMC,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACA,SAAOD,KAAK,CACTU,GADI,CACA,mCADA,EACqC;AADrC,GAEJC,IAFI,CAEEC,QAAQ,IAAIJ,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACP,cAAN;AAAsBW,IAAAA,IAAI,EAAED,QAAQ,CAACE;AAArC,GAAD,CAFtB,EAGJC,KAHI,CAGGC,GAAG,IAAIR,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACN,cAAN;AAAsBc,IAAAA,OAAO,EAAED;AAA/B,GAAD,CAHlB,CAAP;AAID,CANM;AAQP,OAAO,MAAME,UAAU,GAAIC,EAAD,IAAQX,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACED,EAAAA,KAAK,CACJoB,GADD,CACK,sCADL,EAC6C;AAD7C,GAECT,IAFD,CAEOC,QAAQ,IAAIJ,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACP,cAAN;AAAsBW,IAAAA,IAAI,EAAED,QAAQ,CAACE;AAArC,GAAD,CAF3B,EAGCC,KAHD,CAGQC,GAAG,IAAIR,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACN,cAAN;AAAsBc,IAAAA,OAAO,EAAED;AAA/B,GAAD,CAHvB;AAIH,CANM;AAQP,OAAO,MAAMK,UAAU,GAAIF,EAAD,IAAQX,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACED,EAAAA,KAAK,CACJsB,MADD,CACQ,sCADR,EACgD;AADhD,GAECX,IAFD,CAEOC,QAAQ,IAAIJ,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACP,cAAN;AAAsBW,IAAAA,IAAI,EAAED,QAAQ,CAACE;AAArC,GAAD,CAF3B,EAGCC,KAHD,CAGQC,GAAG,IAAIR,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACN,cAAN;AAAsBc,IAAAA,OAAO,EAAED;AAA/B,GAAD,CAHvB;AAIH,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import axios from 'axios';\n\nexport const GET_LODGE_RE = 'GET_LODGE_RE';\nexport const GET_LODGE_SUCC = 'GET_LODGE_SUCC';\nexport const GET_LODGE_FAIL = 'GET_LODGE_FAIL';\n\nexport const UPDATE_LOADGE_I = 'UPDATE_LOADGE_RE';\nexport const UPDATE_LOADGE_SUCC = 'UPDATE_LOADGE_SUCC';\nexport const UPDATE_LOADGE_FAIL = 'UPDATE_LOADGE_FAIL';\n\n// export const DELETE_LOADGE_RE = 'DELETE_LOADGE_RE';\n// export const DELETE_LOADGE_SUCC = 'DELETE_LOADGE_SUCC';\n// export const DELETE_LOADGE_FAIL = 'DELETE_LOADGE_FAIL';\n\nexport const getInfo = () => dispatch => {\n  dispatch({type: GET_LODGE_RE})\n  return axios\n    .get(\"http://localhost:5000/api/users/u\",)//console.log(data,'one')\n    .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n    .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n}\n\nexport const updateInfo = (id) => dispatch => {\n  dispatch({type: GET_LODGE_RE})\n    axios\n    .put(\"http://localhost:5000/api/users/{id}\",)//console.log(data,'one')\n    .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n    .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n}\n\nexport const deleteInfo = (id) => dispatch => {\n  dispatch({type: GET_LODGE_RE})\n    axios\n    .delete(\"http://localhost:5000/api/users/{id}\",)//console.log(data,'one')\n    .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n    .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n}\n\n// export const getNames = (item) => {\n//   return {\n//     type: GET_LODGE_SUCC,\n//     item\n//   }\n// };\n\n\n// export const getInfo = (url,props) => {\n//   return (dispatch) => {\n//     return axios.get(\"http://localhost:5000/api/users/u\")\n//       .then(response => {\n//         dispatch(getNames(response.data))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\n\n\n// export default getInfo;"]},"metadata":{},"sourceType":"module"}