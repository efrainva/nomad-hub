{"ast":null,"code":"var _jsxFileName = \"/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/comp/Home.js\";\nimport React, { useEffect } from 'react'; // import NavBar from './navbar'\n// import Search from './Search'\n\nimport { connect } from 'react-redux';\nimport { getInfo } from '../redux/Actions/lodgeA';\n\nfunction Home({\n  lodgeData,\n  getInfo\n}) {\n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  if (lodgeData.message === \"failed/error\") {\n    return React.createElement(React.Fragment, null, \"error \");\n  } else if (lodgeData.message === \"loading\") {\n    return React.createElement(React.Fragment, null, \" recived\");\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"//     \", React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \"//     \", React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"//     \", React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"//       \", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"City\"), \"//       \", React.createElement(\"div\", {\n      className: \"cardholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"//       \"), \"//     \"), \"//   \"), loadgeData.name.map(e => {\n      return React.createElement(PeopleCard, {\n        item: e,\n        key: e.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }));\n  } // }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lodgeData: state.AllLodge,\n    err: state.AllLodge\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getInfo\n})(Home); // export default Home;\n// return (\n// )","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/comp/Home.js"],"names":["React","useEffect","connect","getInfo","Home","lodgeData","message","loadgeData","name","map","e","id","mapStateToProps","state","AllLodge","err"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B,C,CAEA;AACA;;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,SAAD;AAAWF,EAAAA;AAAX,CAAd,EAAkC;AAEhCF,EAAAA,SAAS,CAAE,MAAK;AACdE,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;;AAKA,MAAIE,SAAS,CAACC,OAAV,KAAsB,cAA1B,EAA0C;AACxC,WAAQ,mDAAR;AAEC,GAHH,MAGU,IAAID,SAAS,CAACC,OAAV,KAAsB,SAA1B,EAAsC;AAC5C,WAAQ,qDAAR;AACD,GAFO,MAED;AACL,WACE,0CACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,aAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,aAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,YAJJ,UADH,EAeDC,UAAU,CAACC,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AAC1B,aAAO,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAGA,CAAnB;AAAsB,QAAA,GAAG,EAAGA,CAAC,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACC,KAFA,CAfC,CADF;AAqBD,GAlC6B,CAoChC;;AAGD;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,SAAS,EAAEQ,KAAK,CAACC,QADZ;AAELC,IAAAA,GAAG,EAAEF,KAAK,CAACC;AAFN,GAAP;AAID,CALD;;AASA,eAAeZ,OAAO,CAACU,eAAD,EAAiB;AAACT,EAAAA;AAAD,CAAjB,CAAP,CAAmCC,IAAnC,CAAf,C,CAEA;AACE;AACA","sourcesContent":["import React,{useEffect} from 'react';\n\n// import NavBar from './navbar'\n// import Search from './Search'\n\nimport {connect} from 'react-redux';\nimport { getInfo } from '../redux/Actions/lodgeA';\n\n\nfunction Home({lodgeData,getInfo}){\n\n  useEffect (()=> {\n    getInfo()\n  },[])\n\n  \n  if (lodgeData.message === \"failed/error\") {\n    return (<>error </>\n      )\n    }  else if (lodgeData.message === \"loading\")  {\n      return (<> recived</>)\n    } else {\n      return (\n        <>\n           <div >\n        \n        //     <NavBar />\n        //     <Search />\n        //     <div className='location'>\n        //       <h2>City</h2>\n        //       <div className='cardholder'>\n                \n        \n        //       </div>\n        //     </div>\n        \n        //   </div>\n\n      {loadgeData.name.map(e => {\n      return <PeopleCard item ={e} key ={e.id}/>\n      })}\n      </>\n      )\n    } \n   \n  // }\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lodgeData: state.AllLodge,\n    err: state.AllLodge\n  }\n}\n\n\n\nexport default connect(mapStateToProps,{getInfo})(Home)\n\n// export default Home;\n  // return (\n  // )"]},"metadata":{},"sourceType":"module"}