{"ast":null,"code":"import axios from 'axios';\nexport const GET_LODGE_RE = 'GET_LODGE_RE';\nexport const GET_LODGE_SUCC = 'GET_LODGE_SUCC'; // export const GET_LODGE_FAIL = 'GET_LODGE_FAIL';\n// export const UPDATE_LOADGE_I = 'UPDATE_LOADGE_RE';\n// export const UPDATE_LOADGE_SUCC = 'UPDATE_LOADGE_SUCC';\n// export const UPDATE_LOADGE_FAIL = 'UPDATE_LOADGE_FAIL';\n// export const DELETE_LOADGE_RE = 'DELETE_LOADGE_RE';\n// export const DELETE_LOADGE_SUCC = 'DELETE_LOADGE_SUCC';\n// export const DELETE_LOADGE_FAIL = 'DELETE_LOADGE_FAIL';\n\nexport const getInfo = () => {\n  return dispatch => {\n    dispatch(getlodge());\n    axios.get(\"http://localhost:5000/api/users/u\") //console.log(data,'one')\n    .then(response => {\n      const name = response.data;\n      dispatch(getlodgesuc(name));\n    }); // .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n  };\n};\nexport const getlodge = () => {\n  return {\n    type: GET_LODGE_RE\n  };\n};\nexport const getlodgesuc = name => {\n  return {\n    type: GET_LODGE_SUCC,\n    payload: name\n  };\n}; // export const updateInfo = (id) => dispatch => {\n//   dispatch({type: GET_LODGE_RE})\n//     axios\n//     .put(\"http://localhost:5000/api/users/{id}\",)//console.log(data,'one')\n//     .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n//     .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n// }\n// export const deleteInfo = (id) => dispatch => {\n//   dispatch({type: GET_LODGE_RE})\n//     axios\n//     .delete(\"http://localhost:5000/api/users/{id}\",)//console.log(data,'one')\n//     .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n//     .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n// }\n// export const getNames = (item) => {\n//   return {\n//     type: GET_LODGE_SUCC,\n//     item\n//   }\n// };\n// export const getInfo = (url,props) => {\n//   return (dispatch) => {\n//     return axios.get(\"http://localhost:5000/api/users/u\")\n//       .then(response => {\n//         dispatch(getNames(response.data))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n// export default getInfo;","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/Actions/lodgeA.js"],"names":["axios","GET_LODGE_RE","GET_LODGE_SUCC","getInfo","dispatch","getlodge","get","then","response","name","data","getlodgesuc","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CACP;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAa;AAClBA,IAAAA,QAAQ,CAACC,QAAQ,EAAT,CAAR;AACAL,IAAAA,KAAK,CACFM,GADH,CACO,mCADP,EAC2C;AAD3C,KAEGC,IAFH,CAESC,QAAQ,IAAI;AACjB,YAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAtB;AACAN,MAAAA,QAAQ,CAACO,WAAW,CAACF,IAAD,CAAZ,CAAR;AACH,KALD,EAFkB,CAQhB;AACH,GATD;AAUD,CAXM;AAaP,OAAO,MAAMJ,QAAQ,GAAG,MAAM;AAC5B,SAAO;AAACO,IAAAA,IAAI,EAAEX;AAAP,GAAP;AACD,CAFM;AAIP,OAAO,MAAMU,WAAW,GAAIF,IAAD,IAAU;AACnC,SAAO;AACLG,IAAAA,IAAI,EAAEV,cADD;AAELW,IAAAA,OAAO,EAACJ;AAFH,GAAP;AAID,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import axios from 'axios';\n\nexport const GET_LODGE_RE = 'GET_LODGE_RE';\nexport const GET_LODGE_SUCC = 'GET_LODGE_SUCC';\n// export const GET_LODGE_FAIL = 'GET_LODGE_FAIL';\n\n// export const UPDATE_LOADGE_I = 'UPDATE_LOADGE_RE';\n// export const UPDATE_LOADGE_SUCC = 'UPDATE_LOADGE_SUCC';\n// export const UPDATE_LOADGE_FAIL = 'UPDATE_LOADGE_FAIL';\n\n// export const DELETE_LOADGE_RE = 'DELETE_LOADGE_RE';\n// export const DELETE_LOADGE_SUCC = 'DELETE_LOADGE_SUCC';\n// export const DELETE_LOADGE_FAIL = 'DELETE_LOADGE_FAIL';\n\nexport const getInfo = () => {\n  return (dispatch) =>{\n    dispatch(getlodge())\n    axios\n      .get(\"http://localhost:5000/api/users/u\")//console.log(data,'one')\n      .then( response => {\n        const name = response.data\n        dispatch(getlodgesuc(name)) \n    })\n      // .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n  }\n}\n\nexport const getlodge = () => {\n  return {type: GET_LODGE_RE}\n}\n\nexport const getlodgesuc = (name) => {\n  return {\n    type: GET_LODGE_SUCC,\n    payload:name\n  }\n}\n\n// export const updateInfo = (id) => dispatch => {\n//   dispatch({type: GET_LODGE_RE})\n//     axios\n//     .put(\"http://localhost:5000/api/users/{id}\",)//console.log(data,'one')\n//     .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n//     .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n// }\n\n// export const deleteInfo = (id) => dispatch => {\n//   dispatch({type: GET_LODGE_RE})\n//     axios\n//     .delete(\"http://localhost:5000/api/users/{id}\",)//console.log(data,'one')\n//     .then( response => dispatch({type:GET_LODGE_SUCC, name: response.data } )) \n//     .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) \n// }\n\n// export const getNames = (item) => {\n//   return {\n//     type: GET_LODGE_SUCC,\n//     item\n//   }\n// };\n\n\n// export const getInfo = (url,props) => {\n//   return (dispatch) => {\n//     return axios.get(\"http://localhost:5000/api/users/u\")\n//       .then(response => {\n//         dispatch(getNames(response.data))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\n\n\n// export default getInfo;"]},"metadata":{},"sourceType":"module"}