{"ast":null,"code":"var _jsxFileName = \"/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/comp/Home.js\";\nimport React, { useEffect } from 'react';\nimport NavBar from './navbar';\nimport Search from './Search'; // import PeopleCard from './PeopleCard'\n\nimport { connect } from 'react-redux';\nimport { getInfo } from '../redux/Actions/lodgeA';\n\nfunction Home({\n  lodgeData,\n  getInfo\n}) {\n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  if (lodgeData.message === \"failed/error\") {\n    return React.createElement(React.Fragment, null, \" error \");\n  } else if (lodgeData.message === \"loading\") {\n    return React.createElement(React.Fragment, null, \" recived \");\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"div\", {\n      className: \"cardholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lodgeData: state.AllLodge,\n    err: state.AllLodge\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getInfo\n})(Home); // export default Home;\n// return (\n// )","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/comp/Home.js"],"names":["React","useEffect","NavBar","Search","connect","getInfo","Home","lodgeData","message","mapStateToProps","state","AllLodge","err"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,SAAD;AAAWF,EAAAA;AAAX,CAAd,EAAkC;AAEhCJ,EAAAA,SAAS,CAAE,MAAK;AACdI,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;;AAKA,MAAIE,SAAS,CAACC,OAAV,KAAsB,cAA1B,EAA0C;AACxC,WAAQ,oDAAR;AACC,GAFH,MAEU,IAAID,SAAS,CAACC,OAAV,KAAsB,SAA1B,EAAsC;AAC5C,WAAQ,sDAAR;AACD,GAFO,MAED;AACL,WACE,0CACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAJF,CADH,CADF;AAmBD;AAEJ;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,SAAS,EAAEG,KAAK,CAACC,QADZ;AAELC,IAAAA,GAAG,EAAEF,KAAK,CAACC;AAFN,GAAP;AAID,CALD;;AASA,eAAeP,OAAO,CAACK,eAAD,EAAiB;AAACJ,EAAAA;AAAD,CAAjB,CAAP,CAAmCC,IAAnC,CAAf,C,CAEA;AACE;AACA","sourcesContent":["import React,{useEffect} from 'react';\n\nimport NavBar from './navbar'\nimport Search from './Search'\n// import PeopleCard from './PeopleCard'\n\nimport {connect} from 'react-redux';\nimport { getInfo } from '../redux/Actions/lodgeA';\n\n\nfunction Home({lodgeData,getInfo}){\n\n  useEffect (()=> {\n    getInfo()\n  },[])\n\n  \n  if (lodgeData.message === \"failed/error\") {\n    return (<> error </>)\n    }  else if (lodgeData.message === \"loading\")  {\n      return (<> recived </>)\n    } else {\n      return (\n        <>\n           <div >\n        \n             <NavBar />\n             <Search />\n             <div className='location'>\n               <h2>City</h2>\n              <div className='cardholder'>\n               </div>\n             </div>\n        \n           </div>\n\n      {/* {lodgeData.name.map(e => {\n      return <PeopleCard item ={e} key ={e.id}/>\n      })} */}\n      </>\n      )\n    } \n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lodgeData: state.AllLodge,\n    err: state.AllLodge\n  }\n}\n\n\n\nexport default connect(mapStateToProps,{getInfo})(Home)\n\n// export default Home;\n  // return (\n  // )"]},"metadata":{},"sourceType":"module"}