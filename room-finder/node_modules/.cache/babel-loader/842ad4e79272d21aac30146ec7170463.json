{"ast":null,"code":"import axios from 'axios';\nexport const GET_LODGE_RE = 'GET_LODGE_RE';\nexport const GET_LODGE_SUCC = 'GET_LODGE_SUCC';\nexport const GET_LODGE_FAIL = 'GET_LODGE_FAIL'; // export const UPDATE_LOADGE_I = 'UPDATE_LOADGE_RE';\n// export const UPDATE_LOADGE_SUCC = 'UPDATE_LOADGE_SUCC';\n// export const UPDATE_LOADGE_FAIL = 'UPDATE_LOADGE_FAIL';\n// export const DELETE_LOADGE_RE = 'DELETE_LOADGE_RE';\n// export const DELETE_LOADGE_SUCC = 'DELETE_LOADGE_SUCC';\n// export const DELETE_LOADGE_FAIL = 'DELETE_LOADGE_FAIL';\n\nexport const getInfo = data => dispatch => {\n  dispatch({\n    type: GET_LODGE_RE\n  });\n  return axios.get(\"http://localhost:5000/api/users/u\") //console.log(data,'one')\n  .then(response => {\n    dispatch({\n      type: GET_LODGE_SUCC,\n      name: response.data\n    });\n  }).catch(err => dispatch({\n    type: GET_LODGE_FAIL,\n    message: err\n  }));\n}; // export const getNames = (item) => {\n//   return {\n//     type: GET_LODGE_SUCC,\n//     item\n//   }\n// };\n// export const getInfo = (url,props) => {\n//   return (dispatch) => {\n//     return axios.get(\"http://localhost:5000/api/users/u\")\n//       .then(response => {\n//         dispatch(getNames(response.data))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n// export default getInfo;","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/room-finder/src/Actions/lodge.js"],"names":["axios","GET_LODGE_RE","GET_LODGE_SUCC","GET_LODGE_FAIL","getInfo","data","dispatch","type","get","then","response","name","catch","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAGP;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAGC,IAAI,IAAIC,QAAQ,IAAG;AACxCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN;AAAP,GAAD,CAAR;AACA,SACED,KAAK,CAACQ,GAAN,CAAU,mCAAV,EAA+C;AAA/C,GACCC,IADD,CACOC,QAAQ,IAAI;AAAEJ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL,cAAN;AAAsBS,MAAAA,IAAI,EAAED,QAAQ,CAACL;AAArC,KAAD,CAAR;AAAuD,GAD5E,EAGCO,KAHD,CAGQC,GAAG,IAAIP,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACJ,cAAN;AAAsBW,IAAAA,OAAO,EAAED;AAA/B,GAAD,CAHvB,CADF;AAKD,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import axios from 'axios';\n\nexport const GET_LODGE_RE = 'GET_LODGE_RE';\nexport const GET_LODGE_SUCC = 'GET_LODGE_SUCC';\nexport const GET_LODGE_FAIL = 'GET_LODGE_FAIL';\n\n\n// export const UPDATE_LOADGE_I = 'UPDATE_LOADGE_RE';\n// export const UPDATE_LOADGE_SUCC = 'UPDATE_LOADGE_SUCC';\n// export const UPDATE_LOADGE_FAIL = 'UPDATE_LOADGE_FAIL';\n\n// export const DELETE_LOADGE_RE = 'DELETE_LOADGE_RE';\n// export const DELETE_LOADGE_SUCC = 'DELETE_LOADGE_SUCC';\n// export const DELETE_LOADGE_FAIL = 'DELETE_LOADGE_FAIL';\n\nexport const getInfo = data => dispatch =>{\n  dispatch({type: GET_LODGE_RE})\n  return (\n    axios.get(\"http://localhost:5000/api/users/u\",)//console.log(data,'one')\n    .then( response => { dispatch({type:GET_LODGE_SUCC, name: response.data } )}) \n\n    .catch( err => dispatch({type:GET_LODGE_FAIL, message: err  })) )\n};\n\n// export const getNames = (item) => {\n//   return {\n//     type: GET_LODGE_SUCC,\n//     item\n//   }\n// };\n\n\n// export const getInfo = (url,props) => {\n//   return (dispatch) => {\n//     return axios.get(\"http://localhost:5000/api/users/u\")\n//       .then(response => {\n//         dispatch(getNames(response.data))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\n\n\n// export default getInfo;"]},"metadata":{},"sourceType":"module"}