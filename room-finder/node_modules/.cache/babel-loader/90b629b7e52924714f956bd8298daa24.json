{"ast":null,"code":"import _defineProperty from \"/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_PLACE, GOT_PLACE, FAIL_PLACE } from '../Actions/lodgeA';\nconst initialState = {\n  name: [],\n  loading: false,\n  err: '' //  message:'' \n\n};\nexport const lodge = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LODGE_RE:\n      return _objectSpread({}, state, {\n        loading: true,\n        name: []\n      });\n\n    case GET_LODGE_FAIL:\n      return _objectSpread({}, state, {\n        name: [],\n        err: action.paylaod // message:'error did not receive data'\n\n      });\n\n    case GET_LODGE_SUCC:\n      return _objectSpread({}, state, {\n        name: action.paylaod,\n        loading: false // message:'grabbing'\n\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/redux/Reducers/lodgeR.js"],"names":["GET_PLACE","GOT_PLACE","FAIL_PLACE","initialState","name","loading","err","lodge","state","action","type","GET_LODGE_RE","GET_LODGE_FAIL","paylaod","GET_LODGE_SUCC"],"mappings":";;;;;;AAAA,SAAUA,SAAV,EACEC,SADF,EAEEC,UAFF,QAEuB,mBAFvB;AAIA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAC,EADe;AAEpBC,EAAAA,OAAO,EAAC,KAFY;AAGpBC,EAAAA,GAAG,EAAC,EAHgB,CAIrB;;AAJqB,CAArB;AAOA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,YAAL;AACE,+BACKH,KADL;AAEEH,QAAAA,OAAO,EAAC,IAFV;AAGED,QAAAA,IAAI,EAAC;AAHP;;AAKA,SAAKQ,cAAL;AACE,+BACKJ,KADL;AAEEJ,QAAAA,IAAI,EAAC,EAFP;AAGEE,QAAAA,GAAG,EAACG,MAAM,CAACI,OAHb,CAIE;;AAJF;;AAMJ,SAAKC,cAAL;AACE,+BACKN,KADL;AAEEJ,QAAAA,IAAI,EAACK,MAAM,CAACI,OAFd;AAGER,QAAAA,OAAO,EAAC,KAHV,CAIE;;AAJF;;AAMF;AACA,aAAOG,KAAP;AAtBF;AAwBD,CAzBM","sourcesContent":["import {  GET_PLACE ,\n  GOT_PLACE, \n  FAIL_PLACE,  }  from '../Actions/lodgeA';\n\nconst initialState = {\n name:[],\n loading:false,\n err:''\n//  message:'' \n};\n\nexport const lodge = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LODGE_RE:\n      return {\n        ...state,\n        loading:true,\n        name:[]\n      }\n      case GET_LODGE_FAIL:\n        return {\n          ...state,\n          name:[],\n          err:action.paylaod,\n          // message:'error did not receive data'\n        }\n    case GET_LODGE_SUCC:\n      return {\n        ...state,\n        name:action.paylaod,\n        loading:false,\n        // message:'grabbing'\n      }\n    default: \n    return state;\n  } \n}\n\n"]},"metadata":{},"sourceType":"module"}