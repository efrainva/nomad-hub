{"ast":null,"code":"var _jsxFileName = \"/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/comp/Home.js\";\nimport React, { useEffect } from 'react';\nimport NavBar from './navbar';\nimport Search from './Search';\nimport PeopleCard from './';\nimport { connect } from 'react-redux';\nimport { getInfo } from '../redux/Actions/lodgeA';\n\nfunction Home({\n  lodgeData,\n  getInfo\n}) {\n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  if (lodgeData.message === \"failed/error\") {\n    return React.createElement(React.Fragment, null, \"error \");\n  } else if (lodgeData.message === \"loading\") {\n    return React.createElement(React.Fragment, null, \" recived\");\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"div\", {\n      className: \"cardholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))), lodgeData.name.map(e => {\n      return React.createElement(PeopleCard, {\n        item: e,\n        key: e.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }));\n  } // }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lodgeData: state.AllLodge,\n    err: state.AllLodge\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getInfo\n})(Home); // export default Home;\n// return (\n// )","map":{"version":3,"sources":["/Users/efrain/Documents/toom/room-team/nomad-hub/room-finder/src/comp/Home.js"],"names":["React","useEffect","NavBar","Search","PeopleCard","connect","getInfo","Home","lodgeData","message","name","map","e","id","mapStateToProps","state","AllLodge","err"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,IAAvB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,SAAD;AAAWF,EAAAA;AAAX,CAAd,EAAkC;AAEhCL,EAAAA,SAAS,CAAE,MAAK;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;;AAKA,MAAIE,SAAS,CAACC,OAAV,KAAsB,cAA1B,EAA0C;AACxC,WAAQ,mDAAR;AAEC,GAHH,MAGU,IAAID,SAAS,CAACC,OAAV,KAAsB,SAA1B,EAAsC;AAC5C,WAAQ,qDAAR;AACD,GAFO,MAED;AACL,WACE,0CACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAJF,CADH,EAaDD,SAAS,CAACE,IAAV,CAAeC,GAAf,CAAmBC,CAAC,IAAI;AACzB,aAAO,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAGA,CAAnB;AAAsB,QAAA,GAAG,EAAGA,CAAC,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACC,KAFA,CAbC,CADF;AAmBD,GAhC6B,CAkChC;;AAGD;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,SAAS,EAAEO,KAAK,CAACC,QADZ;AAELC,IAAAA,GAAG,EAAEF,KAAK,CAACC;AAFN,GAAP;AAID,CALD;;AASA,eAAeX,OAAO,CAACS,eAAD,EAAiB;AAACR,EAAAA;AAAD,CAAjB,CAAP,CAAmCC,IAAnC,CAAf,C,CAEA;AACE;AACA","sourcesContent":["import React,{useEffect} from 'react';\n\nimport NavBar from './navbar'\nimport Search from './Search'\nimport PeopleCard from './'\n\nimport {connect} from 'react-redux';\nimport { getInfo } from '../redux/Actions/lodgeA';\n\n\nfunction Home({lodgeData,getInfo}){\n\n  useEffect (()=> {\n    getInfo()\n  },[])\n\n  \n  if (lodgeData.message === \"failed/error\") {\n    return (<>error </>\n      )\n    }  else if (lodgeData.message === \"loading\")  {\n      return (<> recived</>)\n    } else {\n      return (\n        <>\n           <div >\n        \n             <NavBar />\n             <Search />\n             <div className='location'>\n               <h2>City</h2>\n              <div className='cardholder'>\n               </div>\n             </div>\n        \n           </div>\n\n      {lodgeData.name.map(e => {\n      return <PeopleCard item ={e} key ={e.id}/>\n      })}\n      </>\n      )\n    } \n   \n  // }\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lodgeData: state.AllLodge,\n    err: state.AllLodge\n  }\n}\n\n\n\nexport default connect(mapStateToProps,{getInfo})(Home)\n\n// export default Home;\n  // return (\n  // )"]},"metadata":{},"sourceType":"module"}